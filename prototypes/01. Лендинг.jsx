import { useMemo, useState, useEffect, useRef } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { Progress } from "@/components/ui/progress";
import { Checkbox } from "@/components/ui/checkbox";
import { Switch } from "@/components/ui/switch";
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover";
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select";
import {
  Rocket,
  Settings2,
  Activity,
  Info,
  ShieldCheck,
  AlertTriangle,
  Bot,
  Search,
  Briefcase,
  Building2,
  User as UserIcon,
  Gauge,
  ListOrdered,
  Gift,
  CheckCircle2,
  TimerReset,
  CheckCircle,
} from "lucide-react";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";

// ---------------------------------------------------------------------------
// üîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–ï–ó import.meta / process.env (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å —Ö–æ–ª—Å—Ç–æ–º)
// –ò—Å–ø–æ–ª—å–∑—É–µ–º window.__APP_CONFIG__ —Å –¥–µ—Ñ–æ–ª—Ç–∞–º–∏.
// ---------------------------------------------------------------------------
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const APP: any = (globalThis as any).__APP_CONFIG__ || {};

// ====== –ë–†–ï–ù–î ======
export interface Brand {
  name: string;
  logoUrl: string;
  companyLegalName?: string;
  supportEmail?: string;
  supportPhone?: string;
  address?: string;
  socials?: { vk?: string; tg?: string; x?: string; github?: string };
  footerLinks?: { faq?: string; policy?: string; contacts?: string; terms?: string };
  whiteLabel?: { enabled?: boolean; partnerName?: string; logoUrl?: string };
}

const BRAND: Brand = {
  name: APP?.BRAND?.name ?? "Bitrix Audit",
  logoUrl: APP?.BRAND?.logoUrl ?? "https://cdn.example.com/logo.png",
  companyLegalName: APP?.BRAND?.companyLegalName ?? "–û–û–û ¬´–ö–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏¬ª",
  supportEmail: APP?.BRAND?.supportEmail ?? "support@example.com",
  supportPhone: APP?.BRAND?.supportPhone ?? "",
  address: APP?.BRAND?.address ?? "",
  socials: APP?.BRAND?.socials ?? {},
  footerLinks: APP?.BRAND?.footerLinks ?? { faq: "#", policy: "#", contacts: "#" },
  whiteLabel: APP?.BRAND?.whiteLabel ?? { enabled: false },
};

// ====== –ö–û–ù–§–ò–ì: –õ–ò–ú–ò–¢–´ ======
const LIMITS = {
  rpmPerIP: Number(APP?.LIMITS?.rpmPerIP ?? 30),
  free: {
    perDay: Number(APP?.LIMITS?.free?.perDay ?? 1),
    perMonth: Number(APP?.LIMITS?.free?.perMonth ?? 3),
    maxPages: Number(APP?.LIMITS?.free?.maxPages ?? 100),
  },
} as const;

// –§–ª–∞–≥–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–µ–≤‚Äë–ø–∞–Ω–µ–ª–∏
const FLAGS = {
  isProd: Boolean(APP?.isProd ?? false),
  showDevPanel: Boolean(APP?.showDevPanel ?? false),
};

// ====== I18N (RU-only –¥–ª—è MVP –ø–æ {PO}) ======
// –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞: –≤–µ—Å—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Ä—É—Å—Å–∫–æ–º.
// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ö–µ–ª–ø–µ—Ä t() –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è, –Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º locale.
type Locale = "ru";
const MESSAGES = {
  ru: {
    "hero.title_a": "{{brand}}: –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ 0‚Äì100 –∏ —Ç–æ–ø‚Äë3 –ø—Ä–æ–±–ª–µ–º ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
    "hero.title_b": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞ –∑–∞ 30 —Å–µ–∫—É–Ω–¥. –ë–∞–ª–ª 0‚Äì100 –∏ —Ç–æ–ø‚Äë3 ‚Äî –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
    "hero.limits": "–õ–∏–º–∏—Ç—ã Free: {{perDay}}/–¥–µ–Ω—å, {{perMonth}}/–º–µ—Å, ‚â§{{maxPages}} —Å—Ç—Ä–∞–Ω–∏—Ü; rate‚Äëlimit —à–ª—é–∑–∞: {{rpm}} req/min/IP.",
    "hero.or_email": "–∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ email",
    "auth.or_social": "–∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ —Å–æ—Ü—Å–µ—Ç–∏",
    // ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–≤—Ö–æ–¥
    "auth.email": "E‚Äëmail",
    "auth.next": "–î–∞–ª–µ–µ",
    "auth.signin": "–í–æ–π—Ç–∏",
    "auth.check_inbox_title": "–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–∏—Å—å–º–æ –Ω–∞ {{email}}",
    "auth.check_inbox_sub": "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏–∑ –ø–∏—Å—å–º–∞, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å e‚Äëmail.",
    "auth.resend": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Ä–∞–∑",
    "auth.resend_after": "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ {{sec}} c",
    "auth.enter_code": "–í–≤–µ—Å—Ç–∏ –∫–æ–¥ –≤—Ä—É—á–Ω—É—é",
    "auth.otp_label": "–ö–æ–¥ –∏–∑ –ø–∏—Å—å–º–∞",
    "auth.otp_submit": "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
    "auth.email_exists": "–≠—Ç–æ—Ç e‚Äëmail —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω",
    "auth.switch_to_signin": "–ü–µ—Ä–µ–π—Ç–∏ –∫–æ –≤—Ö–æ–¥—É",
    "auth.rate_limited": "–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    "auth.onboarding_title": "–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ",
    "auth.onboarding_sub": "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–∞—Ä—É –ø–æ–ª–µ–π ‚Äî –∏ –Ω–∞—á–Ω—ë–º –∞—É–¥–∏—Ç.",
    "auth.name": "–ò–º—è",
    "auth.company": "–ö–æ–º–ø–∞–Ω–∏—è",
    "auth.start": "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É",
  },
} as const;
const getLocale = (): Locale => "ru";
function t(key: string, vars: Record<string, any> = {}, _ignored?: any) {
  const raw = (MESSAGES.ru as any)[key] ?? key;
  return raw.replace(/{{(.*?)}}/g, (_: any, k: string) => String(vars[k] ?? ""));
}

// ====== –ê–ù–ê–õ–ò–¢–ò–ö–ê ======
const track = (name: string, props: Record<string, any> = {}) => {
  try { (window as any).analytics?.track?.(name, props); } catch {}
  if (!(window as any).analytics) console.debug("[track]", name, props);
};

// ====== –£–¢–ò–õ–´ ======
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏—Ö –¥–æ–º–µ–Ω–æ–≤ –∏ –∞–≤—Ç–æ–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ https://
// –í –∏–Ω–ø—É—Ç–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –≤–∏–¥ (–∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π), –∞ –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º —Ä–∞–±–æ—Ç–∞–µ–º —Å punycode.
const isIPv4 = (h: string) => {
  if (!/^(\d{1,3}\.){3}\d{1,3}$/.test(h)) return false;
  return h.split(".").every((x) => Number(x) >= 0 && Number(x) <= 255);
};

const isValidPublicHostname = (hostname: string) => {
  if (!hostname) return false;
  if (hostname.endsWith(".")) return false; // –∑–∞–ø—Ä–µ—Ç –∑–∞–≤–µ—Ä—à–∞—é—â–µ–π —Ç–æ—á–∫–∏ (ya.)
  if (hostname.includes("..")) return false; // –∑–∞–ø—Ä–µ—Ç –ø—É—Å—Ç—ã—Ö –º–µ—Ç–æ–∫
  if (isIPv4(hostname)) return true;
  const labels = hostname.split(".");
  if (labels.length < 2) return false; // –Ω—É–∂–µ–Ω –ø—É–±–ª–∏—á–Ω—ã–π TLD
  for (const lbl of labels) {
    if (!lbl || lbl.length > 63) return false;
    if (lbl.startsWith("-") || lbl.endsWith("-")) return false;
    if (!/^[a-z0-9-]+$/i.test(lbl)) return false; // punycode –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ASCII
  }
  const tld = labels[labels.length - 1];
  if (!(/^[a-z]{2,}$/i.test(tld) || /^xn--[a-z0-9-]{2,}$/i.test(tld))) return false; // –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º punycode TLD
  return true;
};

// –ú—è–≥–∫–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞: —Ç–æ–ª—å–∫–æ —Å—Ö–µ–º–∞, –±–µ–∑ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ punycode
const normalizeUrl = (raw: string) => {
  let s = String(raw || "").trim();
  if (!s) return s;
  if (!/^https?:\/\//i.test(s)) s = `https://${s}`;
  return s;
};

// –ñ—ë—Å—Ç–∫–∞—è –∫–∞–Ω–æ–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–µ—Ç–∏: —Å—Ö–µ–º–∞ + punycode hostname
const canonicalizeUrl = (raw: string) => {
  let s = String(raw || "").trim();
  if (!s) return s;
  if (!/^https?:\/\//i.test(s)) s = `https://${s}`;
  try {
    const u = new URL(s);
    if (u.protocol !== "http:" && u.protocol !== "https:") u.protocol = "https:";
    return `${u.protocol}//${u.hostname}${u.port ? ":" + u.port : ""}${u.pathname || "/"}${u.search}${u.hash}`; // hostname —É–∂–µ –≤ punycode
  } catch {
    return s;
  }
};

const validateUrl = (raw: string) => {
  try {
    const s = canonicalizeUrl(raw);
    const u = new URL(s);
    if (u.protocol !== "http:" && u.protocol !== "https:") return false;
    return isValidPublicHostname(u.hostname);
  } catch { return false; }
};

const isValidEmail = (v: string) => /.+@.+\..+/.test(v);

// –§–≠–ô–ö‚ÄëAPI (—Å—Ç–∞–±) –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
const fakeAuthApi = {
  async signupInit({ email }: { email: string }) {
    // –¥–æ–º–µ–Ω otp.test ‚Üí –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ OTP
    if (email.endsWith("@otp.test")) return { method: "otp", length: 6, resendAfter: 30 } as const;
    // –¥–æ–º–µ–Ω exists.test ‚Üí —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    if (email.endsWith("@exists.test")) return { error: "already_exists" } as const;
    // –∏–Ω–∞—á–µ magic link
    return { method: "magic_link", resendAfter: 30 } as const;
  },
  async signinInit({ email }: { email: string }) {
    return { method: "magic_link", resendAfter: 30 } as const;
  },
  async verify({ token, code }: { token?: string; code?: string }) {
    if (token) return { ok: true, needsOnboarding: true, sessionToken: "sess_demo" } as const;
    if (code === "123456") return { ok: true, needsOnboarding: true, sessionToken: "sess_demo" } as const;
    return { ok: false } as const;
  },
  async resend() { return { ok: true } as const; },
};

function Score({ value }: { value: number }) {
  return (
    <div className="p-5 rounded-2xl bg-gradient-to-br from-blue-50 to-indigo-50 border border-blue-100 ring-1 ring-blue-100/60 shadow-sm">
      <div className="text-sm text-slate-600">–ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª</div>
      <div className="flex items-baseline gap-3">
        <div className="text-6xl font-extrabold tracking-tight text-blue-700">{value}</div>
        <div className="text-base text-slate-600">/ 100</div>
      </div>
    </div>
  );
}

type Priority = "P0" | "P1" | "P2" | "P3";
interface Issue { id: string; title: string; priority: Priority; tip?: string }

const sampleIssues: Issue[] = [
  { id: "1", title: "Core Web Vitals: CLS –≤—ã—à–µ 0.25", priority: "P0", tip: "–°—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–π—Ç–µ layout: —Ä–µ–∑–µ—Ä–≤ –º–µ—Å—Ç–∞ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–æ–≤/—à—Ä–∏—Ñ—Ç–æ–≤" },
  { id: "2", title: "–ù–µ—Ç H1 –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö", priority: "P1", tip: "–î–æ–±–∞–≤—å—Ç–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π H1 –Ω–∞ –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É" },
  { id: "3", title: "–ö–æ–Ω—Ç—Ä–∞—Å—Ç —Ç–µ–∫—Å—Ç–∞ –Ω–∏–∂–µ 4.5:1", priority: "P1", tip: "–£—Å–∏–ª–∏—Ç–µ —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞/—Ñ–æ–Ω –¥–æ ‚â•4.5:1" },
  { id: "4", title: "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç alt —É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", priority: "P2", tip: "–û–ø–∏—à–∏—Ç–µ —Å–º—ã—Å–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∞—Ç—Ä–∏–±—É—Ç–µ alt" },
];

function PriorityBadge({ p }: { p: Priority }) {
  const map: Record<Priority, string> = {
    P0: "bg-red-600 text-white",
    P1: "bg-red-500/90 text-white",
    P2: "bg-rose-300 text-black",
    P3: "bg-slate-300 text-black",
  };
  return <span className={`text-[10px] px-1.5 py-0.5 rounded ${map[p]}`}>{p}</span>;
}

function IssueIcon({ p }: { p: Priority }) {
  if (p === "P0" || p === "P1") return <AlertTriangle className="h-4 w-4 text-rose-600"/>;
  return <CheckCircle2 className="h-4 w-4 text-slate-500"/>;
}

function InfoHint({ title, text }: { title: string; text: string }) {
  return (
    <span className="inline-flex items-center gap-1 text-slate-600">
      <Info className="h-3.5 w-3.5"/>
      <span className="text-xs">{title}</span>
      <span className="sr-only">{text}</span>
    </span>
  );
}

function HeroHeadline({ variant }: { variant: HeroVariant }) {
  const locale = getLocale();
  const raw = variant === "B" ? t("hero.title_b", {}, locale) : t("hero.title_a", { brand: BRAND.name }, locale);
  // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ ¬´ ‚Äî ¬ª –Ω–∞ 2 —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
  const parts = raw.split(" ‚Äî ");
  return (
    <h1 className="text-[28px] md:text-5xl font-extrabold tracking-tight leading-tight">
      <span className="block md:inline">{parts[0]}</span>
      {parts[1] ? (
        <>
          <span className="hidden md:inline"> ‚Äî </span>
          <span className="block md:inline text-slate-800">{parts.slice(1).join(" ‚Äî ")}</span>
        </>
      ) : null}
    </h1>
  );
}

type HeroVariant = "A" | "B";
type UserRole = "studio" | "seo" | "owner" | "agency";

type AuthStep = "email" | "check" | "otp" | "onboarding";

function AuthDialog({ open, onOpenChange, mode, onSwitchToSignin }: { open: boolean; onOpenChange: (v: boolean) => void; mode: "signin" | "signup"; onSwitchToSignin?: (email?: string) => void; }) {
  const isSignup = mode === "signup";
  const [email, setEmail] = useState("");
  const [role, setRole] = useState<UserRole | null>(null);
  const [showMoreProviders, setShowMoreProviders] = useState(false);
  const [step, setStep] = useState<AuthStep>("email");
  const [method, setMethod] = useState<"magic_link" | "otp" | null>(null);
  const [resendIn, setResendIn] = useState(0);
  const [loading, setLoading] = useState(false);
  const [inlineError, setInlineError] = useState<string | null>(null);
  const [otp, setOtp] = useState(["", "", "", "", "", ""]);
  const otpRefs = [useRef<HTMLInputElement>(null), useRef<HTMLInputElement>(null), useRef<HTMLInputElement>(null), useRef<HTMLInputElement>(null), useRef<HTMLInputElement>(null), useRef<HTMLInputElement>(null)];
  const [name, setName] = useState("");
  const [company, setCompany] = useState("");

  useEffect(() => { if (!open) { setStep("email"); setMethod(null); setInlineError(null); setResendIn(0); setLoading(false);} }, [open]);

  useEffect(() => {
    if (step === "check" || step === "otp") {
      if (resendIn <= 0) return;
      const tmr = setInterval(() => setResendIn((x) => (x > 0 ? x - 1 : 0)), 1000);
      return () => clearInterval(tmr);
    }
  }, [step, resendIn]);

  const roles: { id: UserRole; title: string; desc: string; icon: React.ReactNode }[] = [
    { id: "studio", title: "–í–µ–±‚Äë—Å—Ç—É–¥–∏—è",         desc: "–ê—É–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤, –æ—Ç—á—ë—Ç—ã, WL",          icon: <Briefcase className="h-4 w-4"/> },
    { id: "seo",    title: "SEO‚Äë—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",    desc: "CWV –∏ —Ç–µ—Ö–∞—É–¥–∏—Ç –¥–ª—è —Ä–æ—Å—Ç–∞",            icon: <Search className="h-4 w-4"/> },
    { id: "owner",  title: "–í–ª–∞–¥–µ–ª–µ—Ü —Å–∞–π—Ç–∞",    desc: "–°–≤–æ–¥–∫–∞ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã, Check‚Äë–ª–∏—Å—Ç",     icon: <UserIcon className="h-4 w-4"/> },
    { id: "agency", title: "–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ/–∏–Ω—Ç–µ–≥—Ä.", desc: "White‚Äëlabel, —ç–∫—Å–ø–æ—Ä—Ç, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",     icon: <Building2 className="h-4 w-4"/> },
  ];

  const choose = (r: UserRole) => {
    setRole(r);
    try { localStorage.setItem("ba.role", r); } catch {}
  };

  const roleRequired = isSignup && !role;

  const startByEmail = async () => {
    setInlineError(null);
    track(isSignup ? "signup_email_click" : "signin_email_click", { role, locale: getLocale() });
    if (!isValidEmail(email)) { setInlineError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π e‚Äëmail"); track(isSignup ? "signup_email_invalid" : "signin_email_invalid", {}); return; }
    if (isSignup && !role) { setInlineError("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –≤—ã—à–µ"); return; }

    setLoading(true);
    try {
      const res = isSignup ? await fakeAuthApi.signupInit({ email }) : await fakeAuthApi.signinInit({ email });
      setLoading(false);

      // –û—à–∏–±–∫–∏
      if ((res as any).error === "already_exists") {
        track("signup_exists_switch_login", {});
        if (onSwitchToSignin) onSwitchToSignin(email);
        return;
      }
      if ((res as any).error === "rate_limited") { setInlineError(t("auth.rate_limited")); return; }

      // –£—Å–ø–µ—à–Ω–æ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–≥ –ø—Ä–æ–≤–µ—Ä–∫–∏
      if ((res as any).method === "magic_link") {
        setMethod("magic_link"); setStep("check"); setResendIn((res as any).resendAfter ?? 30); track("signup_email_start", { method: "magic_link" });
      } else if ((res as any).method === "otp") {
        setMethod("otp"); setStep("otp"); setResendIn((res as any).resendAfter ?? 30); track("signup_email_start", { method: "otp" });
        setTimeout(() => otpRefs[0].current?.focus(), 0);
      }
    } catch (e) {
      setLoading(false);
      setInlineError("–°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É");
    }
  };

  const handleResend = async () => {
    if (resendIn > 0) return;
    const r = await fakeAuthApi.resend();
    if (r.ok) { setResendIn(30); track("otp_resend", {}); }
  };

  const onOtpChange = (i: number, val: string) => {
    const v = val.replace(/\D/g, "").slice(0,1);
    setOtp((prev) => {
      const n = [...prev]; n[i] = v; return n;
    });
    if (v && i < otpRefs.length-1) otpRefs[i+1].current?.focus();
  };

  const verifyOtp = async () => {
    const code = otp.join("");
    const res = await fakeAuthApi.verify({ code });
    if (!res.ok) { setInlineError("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥"); track("otp_submit_fail", {}); return; }
    track("otp_submit_success", {});
    setStep("onboarding");
  };

  const completeOnboarding = () => {
    try { localStorage.setItem("ba.user", JSON.stringify({ email, role, name, company })); } catch {}
    track("signup_completed", { role });
    onOpenChange(false);
  };

  // –†–µ–Ω–¥–µ—Ä —à–∞–≥–∞ —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–µ–π –∏ e‚Äëmail
  const renderStepEmail = () => (
    <div className="space-y-5">
      {/* Email –∫–∞–∫ fallback ‚Äî –≤—ã—à–µ SSO; —Å–µ—Ç–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞–ª–æ —à–∏—Ä–∏–Ω—É */}
      <label className="grid gap-2 text-sm sm:grid-cols-[1fr_auto] sm:items-center">
        <span className="text-slate-700">{t("auth.email")}</span>
        <div className="grid grid-cols-[1fr_auto] gap-2 sm:col-span-2">
          <Input value={email} onChange={(e:any)=>setEmail(e.target.value)} type="email" placeholder="you@company.ru" aria-label="E‚Äëmail" className="rounded-xl shadow-sm h-10 min-w-0 w-full"/>
          <Button onClick={startByEmail} className="rounded-xl h-10 sm:w-[96px] cursor-pointer" aria-disabled={!!(isSignup && !role)} disabled={isSignup && !role || loading} title={isSignup && !role ? "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –≤—ã—à–µ" : undefined}>{isSignup ? t("auth.next") : t("auth.signin")}</Button>
        </div>
        {inlineError && <div className="text-xs text-rose-600 sm:col-span-2" aria-live="polite">{inlineError}</div>}
      </label>
      <div className="flex items-center gap-3 text-xs text-slate-500">
        <span className="flex-1 border-t"/> <span className="px-1">{t("auth.or_social")}</span> <span className="flex-1 border-t"/>
      </div>

      {/* –†–æ–ª–∏: 2√ó2 —Å–µ—Ç–∫–∞ (–ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ) */}
      {isSignup && (
        <div className="space-y-2">
          <div className="text-sm font-medium flex items-center gap-2">
            –ö—Ç–æ –≤—ã?
            <InfoHint title="–ü–æ—á–µ–º—É —Å–ø—Ä–∞—à–∏–≤–∞–µ–º" text="–û—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ –∑–∞–≤–∏—Å—è—Ç —à–∞–±–ª–æ–Ω—ã –æ—Ç—á—ë—Ç–∞ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã." />
          </div>
          <div className="grid grid-cols-2 gap-2" data-test="roles-grid">
            {roles.map((r) => (
              <button key={r.id} type="button" onClick={() => choose(r.id)} aria-pressed={role === r.id}
                className={`text-left cursor-pointer rounded-2xl border p-3 flex items-start gap-2 hover:bg-blue-50/50 h-full ${role === r.id ? "ring-2 ring-blue-600 bg-blue-50 border-blue-200" : ""}`}>
                <div className="mt-0.5 text-slate-600">{r.icon}</div>
                <div>
                  <div className="font-medium">{r.title}</div>
                  <div className="text-xs text-slate-600">{r.desc}</div>
                </div>
              </button>
            ))}
          </div>
          {isSignup && !role && (
            <div className="text-xs text-rose-600" aria-live="polite">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å ‚Äî —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞–±–∏–Ω–µ—Ç–∞.</div>
          )}
        </div>
      )}

      {/* SSO ‚Äî –±–∞–∑–æ–≤—ã–µ (RU-first). –ò–∫–æ–Ω–∫–∏ –≤—ã—Ä–æ–≤–Ω–µ–Ω—ã –∏ –µ–¥–∏–Ω–∞—è –≤—ã—Å–æ—Ç–∞ */}
      <div className="grid grid-cols-2 gap-2">
        <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" aria-label="–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Yandex ID" disabled={isSignup && !role}><img alt="" aria-hidden src="https://yastatic.net/s3/home-static/_/f/ya-logo.svg" className="h-4 w-4 mr-2"/>Yandex ID</Button>
        <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" aria-label="–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ VK ID" disabled={isSignup && !role}><img alt="" aria-hidden src="https://vk.com/images/icons/favicons/fav_logo.ico" className="h-4 w-4 mr-2"/>VK ID</Button>
        <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" aria-label="–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ì–æ—Å—É—Å–ª—É–≥–∏" disabled={isSignup && !role}><img alt="" aria-hidden src="https://www.gosuslugi.ru/favicon.ico" className="h-4 w-4 mr-2"/>–ì–æ—Å—É—Å–ª—É–≥–∏</Button>
        <button type="button" onClick={() => setShowMoreProviders(v => !v)} className="col-span-2 text-sm underline text-slate-700 hover:text-slate-900 text-center">
          {showMoreProviders ? "–°–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ" : "–ï—â—ë —Å–ø–æ—Å–æ–±—ã –≤—Ö–æ–¥–∞"}
        </button>
        {showMoreProviders && (
          <div className="col-span-2 grid grid-cols-2 gap-2">
            <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" disabled={isSignup && !role}><img alt="" aria-hidden src="https://www.google.com/favicon.ico" className="h-4 w-4 mr-2"/>Google</Button>
            <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" disabled={isSignup && !role}><img alt="" aria-hidden src="https://apple.com/favicon.ico" className="h-4 w-4 mr-2"/>Apple ID</Button>
            <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" disabled={isSignup && !role}><img alt="" aria-hidden src="https://www.sberbank.com/favicon.ico" className="h-4 w-4 mr-2"/>–°–±–µ—Ä ID</Button>
            <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" disabled={isSignup && !role}><img alt="" aria-hidden src="https://mail.ru/favicon.ico" className="h-4 w-4 mr-2"/>Mail.ru</Button>
            <Button variant="outline" className="justify-center rounded-xl h-10 cursor-pointer" disabled={isSignup && !role}><img alt="" aria-hidden src="https://telegram.org/favicon.ico" className="h-4 w-4 mr-2"/>Telegram</Button>
          </div>
        )}
      </div>
    </div>
  );

  const renderStepCheck = () => (
    <div className="space-y-4" aria-live="polite">
      <div>
        <div className="text-lg font-semibold">{t("auth.check_inbox_title", { email })}</div>
        <div className="text-sm text-slate-600">{t("auth.check_inbox_sub")}</div>
      </div>

      {/* –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ ‚Äî –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞, –Ω–∞ —Å–≤–æ–µ–π —Å—Ç—Ä–æ–∫–µ */}
      <div className="flex flex-col sm:flex-row gap-2 items-stretch">
        <Button variant="outline" className="rounded-xl cursor-pointer w-full sm:w-auto" onClick={handleResend} disabled={resendIn>0}>
          <TimerReset className="h-4 w-4 mr-2"/>{resendIn>0 ? t("auth.resend_after", {sec: resendIn}) : t("auth.resend")}
        </Button>
      </div>

      {/* –í–≤–æ–¥ –∫–æ–¥–∞ ‚Äî –¥–æ—Å—Ç—É–ø–µ–Ω —Å—Ä–∞–∑—É –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ */}
      <div className="space-y-2">
        <div className="text-xs text-slate-500">{t("auth.enter_code")}</div>
        <div className="flex gap-2">
          {otp.map((d, i) => (
            <input
              key={i}
              ref={otpRefs[i]}
              inputMode="numeric"
              aria-label={`Digit ${i+1}`}
              value={d}
              onChange={(e)=>onOtpChange(i,e.target.value)}
              maxLength={1}
              className="w-12 h-14 text-center rounded-xl border-2 border-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-600 text-xl font-bold"
            />
          ))}
        </div>
        {inlineError && <div className="text-xs text-rose-600" aria-live="polite">{inlineError}</div>}
        <div className="flex gap-2">
          <Button className="rounded-xl cursor-pointer" onClick={verifyOtp}>
            <CheckCircle className="h-4 w-4 mr-2"/>{t("auth.otp_submit")}
          </Button>
        </div>
      </div>
    </div>
  );

  const renderStepOtp = () => (
    <div className="space-y-4">
      <div className="text-sm text-slate-600">{t("auth.otp_label")}</div>
      <div className="flex gap-2">
        {otp.map((d, i) => (
          <input key={i} ref={otpRefs[i]} inputMode="numeric" aria-label={`Digit ${i+1}`} value={d} onChange={(e)=>onOtpChange(i,e.target.value)} maxLength={1}
            className="w-12 h-14 text-center rounded-xl border-2 border-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-600 text-xl font-bold"/>
        ))}
      </div>
      {inlineError && <div className="text-xs text-rose-600" aria-live="polite">{inlineError}</div>}
      <div className="flex gap-2">
        <Button className="rounded-xl cursor-pointer" onClick={verifyOtp}><CheckCircle className="h-4 w-4 mr-2"/>{t("auth.otp_submit")}</Button>
        <Button variant="outline" className="rounded-xl cursor-pointer" onClick={handleResend} disabled={resendIn>0}>
          <TimerReset className="h-4 w-4 mr-2"/>{resendIn>0 ? t("auth.resend_after", {sec: resendIn}) : t("auth.resend")}
        </Button>
      </div>
    </div>
  );

  const renderOnboarding = () => (
    <div className="space-y-4">
      <div>
        <div className="text-lg font-semibold">{t("auth.onboarding_title")}</div>
        <div className="text-sm text-slate-600">{t("auth.onboarding_sub")}</div>
      </div>
      <label className="grid gap-1 text-sm">
        {t("auth.name")}
        <Input value={name} onChange={(e:any)=>setName(e.target.value)} className="rounded-xl" placeholder="–ò–≤–∞–Ω"/>
      </label>
      <label className="grid gap-1 text-sm">
        {t("auth.company")}
        <Input value={company} onChange={(e:any)=>setCompany(e.target.value)} className="rounded-xl" placeholder="–û–û–û ¬´–†–æ–º–∞—à–∫–∞¬ª"/>
      </label>
      <div className="flex gap-2">
        <Button className="rounded-xl cursor-pointer" onClick={completeOnboarding}>{t("auth.start")}</Button>
      </div>
    </div>
  );

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle>{isSignup ? "–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç" : "–í–æ–π—Ç–∏"}</DialogTitle>
          <DialogDescription>
            {isSignup ? "–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á—ë—Ç –∏ —ç–∫—Å–ø–æ—Ä—Ç." : "–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á—ë—Ç—ã."}
          </DialogDescription>
        </DialogHeader>

        {step === "email" && renderStepEmail()}
        {step === "check" && renderStepCheck()}
        {step === "otp" && renderStepOtp()}
        {step === "onboarding" && renderOnboarding()}
      </DialogContent>
    </Dialog>
  );
}

export default function LeadMagnetScreen() {
  const [url, setUrl] = useState("");
  const [botChecked, setBotChecked] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);
  const [score, setScore] = useState<number | null>(null);
  const [top3, setTop3] = useState<Issue[]>([]);
  const [signinOpen, setSigninOpen] = useState(false);
  const [signupOpen, setSignupOpen] = useState(false);

  // –î–µ–≤‚Äë–ø–∞–Ω–µ–ª—å (—Å–∏–º—É–ª—è—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ —Ç–∞—Ä–∏—Ñ–æ–≤)
  const [devOpen, setDevOpen] = useState(false);
  const [simulateRateLimit, setSimulateRateLimit] = useState(false);
  const [simulateApiError, setSimulateApiError] = useState(false);
  const [simulateAntiBot, setSimulateAntiBot] = useState(false);
  const [plan, setPlan] = useState<"Free" | "Pro" | "Agency">("Free");
  const [heroVariant, setHeroVariant] = useState<HeroVariant>("A");

  useEffect(() => { track("hero_variant_shown", { variant: heroVariant }); }, [heroVariant]);

  // MVP: —Å–∫—Ä—ã–≤–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é; –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —è–≤–Ω–æ –≤–∫–ª—é—á–∏–ª–∏ —Ñ–ª–∞–≥ staging'–∞
  const showDevPanel = Boolean(FLAGS.showDevPanel);

  const urlInvalid = useMemo(() => url.trim().length > 0 && !validateUrl(url), [url]);
  const showBotHint = useMemo(() => validateUrl(url) && !botChecked, [url, botChecked]);
  const canRun = useMemo(() => validateUrl(url) && botChecked, [url, botChecked]);

  // ====== –¢–ï–°–¢–´ (dev) ‚Äî –ù–ï –£–î–ê–õ–Ø–¢–¨ ======
  useEffect(() => {
    console.assert(validateUrl("ya.ru"), "validateUrl –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ –¥–æ–º–µ–Ω—ã (ya.ru)");
    console.assert(validateUrl("https://example.com"), "validateUrl –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å https://example.com");
    console.assert(!validateUrl("not_a_url"), "validateUrl –¥–æ–ª–∂–µ–Ω –æ—Ç–∫–ª–æ–Ω—è—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏");
    console.assert(normalizeUrl("ya.ru").startsWith("https://"), "normalizeUrl –¥–æ–ª–∂–µ–Ω –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å https:// –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –¥–æ–º–µ–Ω–æ–≤");
    console.assert(validateUrl("http://ya.ru"), "validateUrl –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å http:// —Å—Ö–µ–º—ã");
    console.assert(!validateUrl(""), "validateUrl –¥–æ–ª–∂–µ–Ω –æ—Ç–∫–ª–æ–Ω—è—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É");
    console.assert(!validateUrl("ya."), "validateUrl –¥–æ–ª–∂–µ–Ω –æ—Ç–∫–ª–æ–Ω—è—Ç—å –¥–æ–º–µ–Ω –±–µ–∑ TLD (ya.)");
    console.assert(validateUrl("8.8.8.8"), "validateUrl –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å IPv4 –∞–¥—Ä–µ—Å–∞");
    console.assert(validateUrl("–ø—Ä–∏–º–µ—Ä.—Ä—Ñ"), "validateUrl –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ –¥–æ–º–µ–Ω—ã");
    console.assert(canonicalizeUrl("–ø—Ä–∏–º–µ—Ä.—Ä—Ñ").includes("xn--"), "canonicalizeUrl –¥–æ–ª–∂–µ–Ω –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ punycode");
    console.assert(!validateUrl("–ø—Ä–∏–º–µ—Ä.—Ä—Ñ."), "–¥–æ–º–µ–Ω —Å –∑–∞–≤–µ—Ä—à–∞—é—â–µ–π —Ç–æ—á–∫–æ–π (–ø—Ä–∏–º–µ—Ä.—Ä—Ñ.) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º");
    const expectedRoles = ["studio","seo","owner","agency"] as const;
    expectedRoles.forEach(r => console.assert((expectedRoles as readonly string[]).includes(r), "–°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å studio/seo/owner/agency"));
    try {
      localStorage.setItem("ba.role", "seo");
      const v = localStorage.getItem("ba.role");
      console.assert(v === "seo", "localStorage –¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ä–æ–ª—å");
    } catch {}
    const ruLimits = t("hero.limits", { perDay: LIMITS.free.perDay, perMonth: LIMITS.free.perMonth, maxPages: LIMITS.free.maxPages, rpm: LIMITS.rpmPerIP });
    console.assert(/–õ–∏–º–∏—Ç—ã/i.test(ruLimits), "i18n: RU —Å—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å—Å—è");
    console.assert(BRAND.name.length > 0 && BRAND.logoUrl.length > 0, "BRAND –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ name/logoUrl");
    console.assert(typeof showDevPanel === "boolean", "showDevPanel –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±—É–ª–µ–≤—ã–º");
    // –ü—Å–µ–≤–¥–æ‚Äë—Ç–µ—Å—Ç—ã DOM –¥–ª—è –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    try {
      const gridEl = document.querySelector('[data-test="roles-grid"]') as HTMLElement | null;
      if (gridEl) {
        const cols = getComputedStyle(gridEl).gridTemplateColumns.split(" ").length;
        console.assert(cols >= 2, "–°–µ—Ç–∫–∞ —Ä–æ–ª–µ–π –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –º–∏–Ω–∏–º—É–º 2 –∫–æ–ª–æ–Ω–∫–∏");
      }
      console.assert(!!document.querySelector('[data-test="dev-panel-trigger"]'), 'Dev panel trigger –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å');
      console.assert(!!document.querySelector('[data-test="auth-signin-mounted"]') && !!document.querySelector('[data-test="auth-signup-mounted"]'), '–ú–æ–¥–∞–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã');
    } catch {}
  }, [showDevPanel]);

  const onSubmit = async () => {
    setError(null); setScore(null); setTop3([]);
    if (!validateUrl(url)) { setError("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://ya.ru –∏–ª–∏ ya.ru)"); return; }
    if (!botChecked) { setError("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç"); return; }
    if (simulateRateLimit) { setError(`–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç ${LIMITS.rpmPerIP} –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω—É—Ç—É —Å –≤–∞—à–µ–≥–æ IP.`); return; }

    setLoading(true);
    await new Promise((r) => setTimeout(r, 1600 + Math.random() * 900));

    if (simulateApiError) { setLoading(false); setError("API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."); return; }
    if (simulateAntiBot) { setLoading(false); setError("–°–∞–π—Ç –∑–∞—â–∏—â—ë–Ω –∞–Ω—Ç–∏–±–æ—Ç‚Äë–º–µ—Ö–∞–Ω–∏–∑–º–∞–º–∏. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–¥—É–ª—å –ë–∏—Ç—Ä–∏–∫—Å –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π –∞—É–¥–∏—Ç."); return; }

    setScore(72 + Math.round(Math.random()*10));
    setTop3(sampleIssues.slice(0,3));
    setLoading(false);
  };

  const onSignin = () => { try { track("signin_clicked", {}); } catch {}; setError(null); setScore(null); setTop3([]); setLoading(false); setSigninOpen(true); };
  const onSignup = () => { try { track("signup_clicked", {}); } catch {}; setError(null); setScore(null); setTop3([]); setLoading(false); setSignupOpen(true); };

  return (
    <div className="min-h-screen bg-gradient-to-b from-gray-50 via-white to-gray-50">
      <div className="mx-auto max-w-6xl p-4 md:p-6 lg:p-10 space-y-10">
        {/* ===== –®–ê–ü–ö–ê (–±—Ä–µ–Ω–¥) ===== */}
        <header className="flex items-center justify-between">
          <div className="flex items-center gap-4">
            <div className="h-12 w-12 rounded-xl bg-white border border-slate-200 flex items-center justify-center overflow-hidden shadow-sm">
              {BRAND.logoUrl ? (
                <img src={BRAND.logoUrl} alt={`${BRAND.name} –ª–æ–≥–æ—Ç–∏–ø`} className="h-12 w-12 object-cover"/>
              ) : (
                <span className="text-blue-700 font-semibold">BA</span>
              )}
            </div>
            <div className="text-base md:text-lg font-semibold text-slate-900">{BRAND.whiteLabel?.enabled && BRAND.whiteLabel?.partnerName ? `${BRAND.whiteLabel.partnerName} ¬∑ ` : ""}{BRAND.name}</div>
          </div>
          <div className="flex items-center gap-2">
            <Button variant="ghost" className="cursor-pointer" onClick={onSignup}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Button>
            <Button variant="ghost" className="cursor-pointer" onClick={onSignin}>–í–æ–π—Ç–∏</Button>
          </div>
        </header>

        {/* ===== HERO ===== */}
        <Card className="rounded-3xl shadow-md border-slate-100 bg-white">
          <CardContent className="p-5 md:p-8 space-y-6">
            <div className="grid md:grid-cols-2 gap-8">
              {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
              <div className="space-y-4">
                <HeroHeadline variant={heroVariant} />
                <p className="text-slate-600">–í—Å—Ç–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç ~30 —Å–µ–∫—É–Ω–¥. {t("hero.limits", { perDay: LIMITS.free.perDay, perMonth: LIMITS.free.perMonth, maxPages: LIMITS.free.maxPages, rpm: LIMITS.rpmPerIP })}</p>

                <div className="flex flex-col sm:flex-row gap-3">
                  <div className="flex-1">
                    <Input
                      value={url}
                      onChange={(e: any) => { setUrl(e.target.value); if (error) setError(null); }}
                      placeholder="https://example.com"
                      onBlur={(e:any)=> setUrl(normalizeUrl(e.target.value))}
                      aria-label="–í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞"
                      aria-invalid={urlInvalid}
                      aria-describedby="url-hint"
                      className={`rounded-2xl shadow-sm ${urlInvalid ? 'ring-1 ring-rose-400 focus-visible:ring-rose-500' : 'ring-1 ring-slate-200 focus-visible:ring-2 focus-visible:ring-blue-600'}`}
                    />
                    <p id="url-hint" className={`text-xs mt-1 ${urlInvalid ? 'text-rose-600' : 'text-slate-500'}`}>
                      {urlInvalid ? '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å. –ü—Ä–∏–º–µ—Ä: example.ru –∏–ª–∏ https://example.ru' : '–£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω –∏–ª–∏ –ø–æ–ª–Ω—ã–π URL'}
                    </p>
                  </div>
                  <Button onClick={() => { track("cta_clicked", { variant: heroVariant, urlProvided: !!url }); onSubmit(); }} disabled={!canRun}
                    className="rounded-2xl min-w-[180px] sm:min-w-[200px] bg-blue-600 hover:bg-blue-700 text-white shadow-md hover:shadow-lg cursor-pointer">
                    <Rocket className="h-4 w-4 mr-2"/>
                    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                  </Button>
                </div>

                {/* –ß–µ–∫–±–æ–∫—Å ‚Äî –Ω–∏–∂–µ —Ñ–æ—Ä–º—ã, –æ–±–ª–µ–≥—á—ë–Ω–Ω—ã–π —Å—Ç–∏–ª—å */}
                <div className="flex flex-col gap-1 text-sm text-slate-700" aria-live="polite">
                  <div className="flex items-center gap-2">
                    <Checkbox id="not-bot" checked={botChecked} onCheckedChange={(v:any) => setBotChecked(Boolean(v))} aria-labelledby="not-bot-label" aria-describedby={showBotHint ? 'not-bot-hint' : undefined} aria-invalid={showBotHint || undefined}/>
                    <label id="not-bot-label" htmlFor="not-bot" className="select-none">–Ø –Ω–µ —Ä–æ–±–æ—Ç</label>
                  </div>
                  {showBotHint && (
                    <p id="not-bot-hint" className="text-xs text-rose-600">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç ‚Äî –±–µ–∑ —ç—Ç–æ–≥–æ –∫–Ω–æ–ø–∫–∞ ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å¬ª –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞.</p>
                  )}
                </div>

                <div className="flex items-center gap-3 text-xs text-slate-600">
                  <ShieldCheck className="h-3.5 w-3.5"/> –ë–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç
                  <Bot className="h-3.5 w-3.5"/> –ë–µ–∑–æ–ø–∞—Å–Ω–æ
                </div>
              </div>

              {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-3">
                  <Feature title="CWV / SEO" text="–õ–∞–π—Ç‚Äë–∞—É–¥–∏—Ç Core Web Vitals –∏ –±–∞–∑–æ–≤–æ–π —Ç–µ—Ö–Ω–∏—á–∫–∏" icon={<Activity className="h-5 w-5"/>} />
                  <Feature title="–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã" text="–£–∫–∞–∂–µ–º –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å (P0‚ÄìP3) –∏ –±—ã—Å—Ç—Ä—ã–µ –ø–æ–±–µ–¥—ã" icon={<AlertTriangle className="h-5 w-5"/>} />
                </div>

                <AnimatePresence>
                  {loading && (
                    <motion.div initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}} className="space-y-3" role="status" aria-live="polite">
                      <div className="text-sm text-slate-700 flex items-center gap-2">
                        <Activity className="h-4 w-4 text-blue-700"/> –°–æ–±–∏—Ä–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏‚Ä¶ —ç—Ç–æ –∑–∞–π–º—ë—Ç –¥–æ 30 —Å–µ–∫—É–Ω–¥
                      </div>
                      <Progress value={40 + Math.random()*50} aria-label="–ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏" aria-valuetext="–°–±–æ—Ä –º–µ—Ç—Ä–∏–∫" />
                    </motion.div>
                  )}
                </AnimatePresence>

                {error && (
                  <Alert variant="destructive">
                    <AlertTitle>–û—à–∏–±–∫–∞</AlertTitle>
                    <AlertDescription>{error}</AlertDescription>
                  </Alert>
                )}

                {!loading && score !== null && (
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <Score value={score} />
                    <div className="p-4 rounded-2xl bg-white border">
                      <div className="text-sm text-slate-600">–¢–æ–ø‚Äë3 –ø—Ä–æ–±–ª–µ–º</div>
                      <div className="space-y-2 mt-2">
                        {top3.map((i) => (
                          <div key={i.id} className="py-2 first:pt-0 last:pb-0 border-b last:border-b-0">
                            <div className="font-medium flex items-center gap-2">
                              <IssueIcon p={i.priority} />
                              <span>{i.title}</span>
                              <PriorityBadge p={i.priority} />
                            </div>
                            <div className="text-sm text-slate-600 pl-6">{i.tip ?? "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ –æ—Ç—á—ë—Ç–µ"}</div>
                          </div>
                        ))}
                      </div>
                      <a className="text-xs inline-flex items-center gap-1 mt-2 px-2 py-1 rounded-md bg-blue-50 hover:bg-blue-100 border border-blue-200 text-blue-700" href="#">–°–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á—ë—Ç ‚Üí</a>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* ===== –ò–ö–û–ù–û–ì–†–ê–§–ò–Ø (–≤–º–µ—Å—Ç–æ –±—ç–π–¥–∂–µ–π) ===== */}
        <div className="grid md:grid-cols-3 gap-4">
          <div className="p-3 rounded-2xl bg-white shadow-sm flex items-center gap-3">
            <Gauge className="h-5 w-5 text-slate-700"/>
            <div className="text-sm"><div className="font-medium">0‚Äì100</div><div className="text-slate-600">–ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª / —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ</div></div>
          </div>
          <div className="p-3 rounded-2xl bg-white shadow-sm flex items-center gap-3">
            <ListOrdered className="h-5 w-5 text-slate-700"/>
            <div className="text-sm"><div className="font-medium">Top‚Äë3</div><div className="text-slate-600">–ë—ã—Å—Ç—Ä—ã–µ –ø–æ–±–µ–¥—ã</div></div>
          </div>
          <div className="p-3 rounded-2xl bg-white shadow-sm flex items-center gap-3">
            <Gift className="h-5 w-5 text-slate-700"/>
            <div className="text-sm"><div className="font-medium">Free</div><div className="text-slate-600">{`${LIMITS.free.perDay}/–¥–µ–Ω—å, ${LIMITS.free.perMonth}/–º–µ—Å, ‚â§${LIMITS.free.maxPages} —Å—Ç—Ä–∞–Ω–∏—Ü`}</div></div>
          </div>
        </div>

        {/* ===== –§–£–¢–ï–† (–ª—ë–≥–∫–∏–π —Ñ–æ–Ω, –∫–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–ª–æ–Ω–∫–æ–π) ===== */}
        <footer className="pt-10 border-t bg-gray-50 rounded-3xl">
          <div className="mx-auto max-w-6xl p-6 grid md:grid-cols-2 gap-6 text-sm text-slate-700">
            <div className="space-y-2">
              <div className="font-medium">¬© {new Date().getFullYear()} {BRAND.companyLegalName}</div>
              <div className="flex items-center gap-4">
                <a className="hover:underline" href={BRAND.footerLinks?.faq ?? "#"}>FAQ</a>
                <a className="hover:underline" href={BRAND.footerLinks?.policy ?? "#"}>–ü–æ–ª–∏—Ç–∏–∫–∞</a>
                <a className="hover:underline" href={BRAND.footerLinks?.contacts ?? "#"}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
              </div>
            </div>
            <div className="space-y-1">
              {BRAND.supportEmail && <div>Email: <a className="hover:underline" href={`mailto:${BRAND.supportEmail}`}>{BRAND.supportEmail}</a></div>}
              {BRAND.supportPhone && <div>–¢–µ–ª–µ—Ñ–æ–Ω: <a className="hover:underline" href={`tel:${BRAND.supportPhone}`}>{BRAND.supportPhone}</a></div>}
              {BRAND.address && <div>–ê–¥—Ä–µ—Å: {BRAND.address}</div>}
            </div>
          </div>
        </footer>

        {/* ===== DEV‚Äë–ü–ê–ù–ï–õ–¨ (–≤–∏–¥–Ω–∞ –≤ –¥–µ–º–æ; –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∫—Ä–æ–π—Ç–µ —Å–∞–º–∏) ===== */}
        <div className="fixed bottom-4 right-4">
          <Popover open={devOpen} onOpenChange={setDevOpen}>
            <PopoverTrigger asChild>
              <Button data-test="dev-panel-trigger" variant="outline" size="sm" className="rounded-xl cursor-pointer"><Settings2 className="h-4 w-4 mr-2"/>Dev‚Äë–ø–∞–Ω–µ–ª—å</Button>
            </PopoverTrigger>
            <PopoverContent className="w-80">
              <div className="text-sm font-medium mb-2">–°–æ—Å—Ç–æ—è–Ω–∏—è</div>
              <div className="space-y-2">
                <label className="flex items-center justify-between text-sm cursor-pointer">
                  <span>Rate limit ({LIMITS.rpmPerIP} rpm/IP)</span>
                  <Switch checked={simulateRateLimit} onCheckedChange={setSimulateRateLimit} />
                </label>
                <label className="flex items-center justify-between text-sm cursor-pointer">
                  <span>API –æ—à–∏–±–∫–∞</span>
                  <Switch checked={simulateApiError} onCheckedChange={setSimulateApiError} />
                </label>
                <label className="flex items-center justify-between text-sm cursor-pointer">
                  <span>–ê–Ω—Ç–∏–±–æ—Ç‚Äë–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞</span>
                  <Switch checked={simulateAntiBot} onCheckedChange={setSimulateAntiBot} />
                </label>
              </div>
              <div className="mt-4 text-sm font-medium mb-2">–¢–∞—Ä–∏—Ñ</div>
              <Select value={plan} onValueChange={(v: any) => setPlan(v)}>
                <SelectTrigger className="w-full cursor-pointer"><SelectValue placeholder="–¢–∞—Ä–∏—Ñ" /></SelectTrigger>
                <SelectContent>
                  <SelectItem value="Free">Free</SelectItem>
                  <SelectItem value="Pro">Pro</SelectItem>
                  <SelectItem value="Agency">Agency</SelectItem>
                </SelectContent>
              </Select>
              <div className="mt-4 text-sm font-medium mb-2">Hero‚Äë–≤–∞—Ä–∏–∞–Ω—Ç</div>
              <Select value={heroVariant} onValueChange={(v: any) => setHeroVariant(v)}>
                <SelectTrigger className="w-full cursor-pointer"><SelectValue placeholder="–í–∞—Ä–∏–∞–Ω—Ç" /></SelectTrigger>
                <SelectContent>
                  <SelectItem value="A">A ‚Äî ¬´–º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ 0‚Äì100‚Ä¶¬ª</SelectItem>
                  <SelectItem value="B">B ‚Äî ¬´–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ 30 —Å–µ–∫—É–Ω–¥‚Ä¶¬ª</SelectItem>
                </SelectContent>
              </Select>
              <div className="text-xs text-slate-500 mt-2">–ü–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ A/B‚Äë–≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤.</div>
            </PopoverContent>
          </Popover>
        </div>

        {/* ===== –ú–û–î–ê–õ–ö–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ===== */}
        <AuthDialog open={signinOpen} onOpenChange={setSigninOpen} mode="signin" />
        <AuthDialog open={signupOpen} onOpenChange={setSignupOpen} mode="signup" onSwitchToSignin={(email)=>{ setSignupOpen(false); setSigninOpen(true); }} />
        {/* Mount markers –¥–ª—è —Ç–µ—Å—Ç–æ–≤ */}
        <span data-test="auth-signin-mounted" className="hidden" />
        <span data-test="auth-signup-mounted" className="hidden" />
      </div>
    </div>
  );
}

function Feature({ title, text, icon }: { title: string; text: string; icon: React.ReactNode }) {
  return (
    <div className="flex items-start gap-3 p-3 rounded-2xl border bg-white">
      <div className="mt-1 text-slate-600">{icon}</div>
      <div>
        <div className="font-medium">{title}</div>
        <div className="text-sm text-slate-600">{text}</div>
      </div>
    </div>
  );
}
